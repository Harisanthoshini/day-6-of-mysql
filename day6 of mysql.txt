create database emptab;
Query OK, 1 row affected (0.09 sec)

mysql> use emptab;
Database changed
mysql> CREATE TABLE Employees (
    ->     emp_id INT PRIMARY KEY,
    ->     name VARCHAR(50),
    ->     department_id INT,
    ->     salary INT
    -> );
Query OK, 0 rows affected (0.17 sec)

mysql> INSERT INTO Employees (emp_id, name, department_id, salary) VALUES
    -> (1, 'Alice', 101, 60000),
    -> (2, 'Bob', 102, 55000),
    -> (3, 'Charlie', 101, 70000),
    -> (4, 'David', 103, 48000),
    -> (5, 'Eve', NULL, 75000),
    -> (6, 'Frank', 104, 52000),
    -> (7, 'Grace', 102, 58000),
    -> (8, 'Hannah', NULL, 62000);
Query OK, 8 rows affected (0.04 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from emptab;
ERROR 1146 (42S02): Table 'emptab.emptab' doesn't exist
mysql> select * from Employees;
+--------+---------+---------------+--------+
| emp_id | name    | department_id | salary |
+--------+---------+---------------+--------+
|      1 | Alice   |           101 |  60000 |
|      2 | Bob     |           102 |  55000 |
|      3 | Charlie |           101 |  70000 |
|      4 | David   |           103 |  48000 |
|      5 | Eve     |          NULL |  75000 |
|      6 | Frank   |           104 |  52000 |
|      7 | Grace   |           102 |  58000 |
|      8 | Hannah  |          NULL |  62000 |
+--------+---------+---------------+--------+
8 rows in set (0.01 sec)

mysql> ^C
mysql> CREATE TABLE Departments (
    ->     department_id INT PRIMARY KEY,
    ->     department_name VARCHAR(50),
    ->     location VARCHAR(50)
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> INSERT INTO Departments (department_id, department_name, location) VALUES
    -> (101, 'HR', 'New York'),
    -> (102, 'IT', 'San Francisco'),
    -> (103, 'Finance', 'Chicago'),
    -> (104, 'Sales', 'Boston'),
    -> (105, 'Marketing', 'Los Angeles');
Query OK, 5 rows affected (0.02 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select * from Departments;
+---------------+-----------------+---------------+
| department_id | department_name | location      |
+---------------+-----------------+---------------+
|           101 | HR              | New York      |
|           102 | IT              | San Francisco |
|           103 | Finance         | Chicago       |
|           104 | Sales           | Boston        |
|           105 | Marketing       | Los Angeles   |
+---------------+-----------------+---------------+
5 rows in set (0.00 sec)

mysql> SELECT e.emp_id, e.name, d.department_name FROM Employees e LEFT JOIN Departments d ON e.department_id = d.department_id;
+--------+---------+-----------------+
| emp_id | name    | department_name |
+--------+---------+-----------------+
|      1 | Alice   | HR              |
|      2 | Bob     | IT              |
|      3 | Charlie | HR              |
|      4 | David   | Finance         |
|      5 | Eve     | NULL            |
|      6 | Frank   | Sales           |
|      7 | Grace   | IT              |
|      8 | Hannah  | NULL            |
+--------+---------+-----------------+
8 rows in set (0.02 sec)

mysql> SELECT e.name FROM Employees e JOIN Departments d ON e.department_id = d.department_id WHERE d.department_name = 'IT';
+-------+
| name  |
+-------+
| Bob   |
| Grace |
+-------+
2 rows in set (0.01 sec)

mysql> SELECT DISTINCT d.department_name, d.location FROM Departments d JOIN Employees e ON d.department_id = e.department_id;
+-----------------+---------------+
| department_name | location      |
+-----------------+---------------+
| HR              | New York      |
| IT              | San Francisco |
| Finance         | Chicago       |
| Sales           | Boston        |
+-----------------+---------------+
4 rows in set (0.01 sec)

mysql> SELECT e.name FROM Employees e JOIN Departments d1 ON e.department_id = d1.department_id WHERE d1.location = (SELECT location FROM Departments WHERE department_name = 'HR');
+---------+
| name    |
+---------+
| Alice   |
| Charlie |
+---------+
2 rows in set (0.01 sec)

mysql> SELECT d.department_name, COUNT(e.emp_id) AS employee_count FROM Departments d JOIN Employees e ON d.department_id = e.department_id GROUP BY d.department_name;
+-----------------+----------------+
| department_name | employee_count |
+-----------------+----------------+
| HR              |              2 |
| IT              |              2 |
| Finance         |              1 |
| Sales           |              1 |
+-----------------+----------------+
4 rows in set (0.01 sec)

mysql> SELECT e.name, d.department_name FROM Employees e LEFT JOIN Departments d ON e.department_id = d.department_id;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| Alice   | HR              |
| Bob     | IT              |
| Charlie | HR              |
| David   | Finance         |
| Eve     | NULL            |
| Frank   | Sales           |
| Grace   | IT              |
| Hannah  | NULL            |
+---------+-----------------+
8 rows in set (0.00 sec)

mysql> SELECT name FROM Employees WHERE department_id IS NULL;
+--------+
| name   |
+--------+
| Eve    |
| Hannah |
+--------+
2 rows in set (0.00 sec)

mysql> SELECT d.department_name, e.name FROM Departments d LEFT JOIN Employees e ON d.department_id = e.department_id;
+-----------------+---------+
| department_name | name    |
+-----------------+---------+
| HR              | Charlie |
| HR              | Alice   |
| IT              | Grace   |
| IT              | Bob     |
| Finance         | David   |
| Sales           | Frank   |
| Marketing       | NULL    |
+-----------------+---------+
7 rows in set (0.00 sec)

mysql> SELECT e.name, COALESCE(d.department_name, 'Unassigned') AS department_name FROM Employees e LEFT JOIN Departments d ON e.department_id = d.department_id;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| Alice   | HR              |
| Bob     | IT              |
| Charlie | HR              |
| David   | Finance         |
| Eve     | Unassigned      |
| Frank   | Sales           |
| Grace   | IT              |
| Hannah  | Unassigned      |
+---------+-----------------+
8 rows in set (0.00 sec)

mysql> SELECT d.department_name FROM Departments d LEFT JOIN Employees e ON d.department_id = e.department_id WHERE e.emp_id IS NULL;
+-----------------+
| department_name |
+-----------------+
| Marketing       |
+-----------------+
1 row in set (0.00 sec)

mysql> SELECT d.department_name, e.name FROM Employees e RIGHT JOIN Departments d ON e.department_id = d.department_id;
+-----------------+---------+
| department_name | name    |
+-----------------+---------+
| HR              | Charlie |
| HR              | Alice   |
| IT              | Grace   |
| IT              | Bob     |
| Finance         | David   |
| Sales           | Frank   |
| Marketing       | NULL    |
+-----------------+---------+
7 rows in set (0.00 sec)

mysql> SELECT e.name, d.location FROM Employees e LEFT JOIN Departments d ON e.department_id = d.department_id;
+---------+---------------+
| name    | location      |
+---------+---------------+
| Alice   | New York      |
| Bob     | San Francisco |
| Charlie | New York      |
| David   | Chicago       |
| Eve     | NULL          |
| Frank   | Boston        |
| Grace   | San Francisco |
| Hannah  | NULL          |
+---------+---------------+
8 rows in set (0.00 sec)

mysql> SELECT e.name, d.department_name FROM Employees e LEFT JOIN Departments d ON e.department_id = d.department_id
    -> UNION
    -> SELECT e.name, d.department_name FROM Employees e RIGHT JOIN Departments d ON e.department_id = d.department_id;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| Alice   | HR              |
| Bob     | IT              |
| Charlie | HR              |
| David   | Finance         |
| Eve     | NULL            |
| Frank   | Sales           |
| Grace   | IT              |
| Hannah  | NULL            |
| NULL    | Marketing       |
+---------+-----------------+
9 rows in set (0.02 sec)

mysql> SELECT e.name, d.department_name FROM Employees e LEFT JOIN Departments d ON e.department_id = d.department_id WHERE d.department_id IS NULL
    -> UNION
    -> SELECT e.name, d.department_name FROM Employees e RIGHT JOIN Departments d ON e.department_id = d.department_id WHERE e.emp_id IS NULL;
+--------+-----------------+
| name   | department_name |
+--------+-----------------+
| Eve    | NULL            |
| Hannah | NULL            |
| NULL   | Marketing       |
+--------+-----------------+
3 rows in set (0.01 sec)

mysql>
mysql> SELECT e1.name AS emp1, e2.name AS emp2 FROM Employees e1 JOIN Employees e2 ON e1.department_id = e2.department_id WHERE e1.emp_id < e2.emp_id;
+-------+---------+
| emp1  | emp2    |
+-------+---------+
| Alice | Charlie |
| Bob   | Grace   |
+-------+---------+
2 rows in set (0.01 sec)

mysql> SELECT e1.name AS employee, e2.name AS colleague FROM Employees e1 JOIN Employees e2 ON e1.department_id = e2.department_id AND e1.emp_id <> e2.emp_id;
+----------+-----------+
| employee | colleague |
+----------+-----------+
| Charlie  | Alice     |
| Grace    | Bob       |
| Alice    | Charlie   |
| Bob      | Grace     |
+----------+-----------+
4 rows in set (0.00 sec)

mysql> SELECT e1.name AS higher_earner, e2.name AS lower_earner FROM Employees e1 JOIN Employees e2 ON e1.salary > e2.salary;
+---------------+--------------+
| higher_earner | lower_earner |
+---------------+--------------+
| Hannah        | Alice        |
| Eve           | Alice        |
| Charlie       | Alice        |
| Hannah        | Bob          |
| Grace         | Bob          |
| Eve           | Bob          |
| Charlie       | Bob          |
| Alice         | Bob          |
| Eve           | Charlie      |
| Hannah        | David        |
| Grace         | David        |
| Frank         | David        |
| Eve           | David        |
| Charlie       | David        |
| Bob           | David        |
| Alice         | David        |
| Hannah        | Frank        |
| Grace         | Frank        |
| Eve           | Frank        |
| Charlie       | Frank        |
| Bob           | Frank        |
| Alice         | Frank        |
| Hannah        | Grace        |
| Eve           | Grace        |
| Charlie       | Grace        |
| Alice         | Grace        |
| Eve           | Hannah       |
| Charlie       | Hannah       |
+---------------+--------------+
28 rows in set (0.00 sec)

mysql> SELECT e.name, (SELECT name FROM Employees WHERE department_id = e.department_id ORDER BY salary DESC LIMIT 1) AS highest_paid FROM Employees e;
+---------+--------------+
| name    | highest_paid |
+---------+--------------+
| Alice   | Charlie      |
| Bob     | Grace        |
| Charlie | Charlie      |
| David   | David        |
| Eve     | NULL         |
| Frank   | Frank        |
| Grace   | Grace        |
| Hannah  | NULL         |
+---------+--------------+
8 rows in set (0.01 sec)

mysql> SELECT e.name AS employee, d.department_name AS department FROM Employees e CROSS JOIN Departments d;
+----------+------------+
| employee | department |
+----------+------------+
| Alice    | Marketing  |
| Alice    | Sales      |
| Alice    | Finance    |
| Alice    | IT         |
| Alice    | HR         |
| Bob      | Marketing  |
| Bob      | Sales      |
| Bob      | Finance    |
| Bob      | IT         |
| Bob      | HR         |
| Charlie  | Marketing  |
| Charlie  | Sales      |
| Charlie  | Finance    |
| Charlie  | IT         |
| Charlie  | HR         |
| David    | Marketing  |
| David    | Sales      |
| David    | Finance    |
| David    | IT         |
| David    | HR         |
| Eve      | Marketing  |
| Eve      | Sales      |
| Eve      | Finance    |
| Eve      | IT         |
| Eve      | HR         |
| Frank    | Marketing  |
| Frank    | Sales      |
| Frank    | Finance    |
| Frank    | IT         |
| Frank    | HR         |
| Grace    | Marketing  |
| Grace    | Sales      |
| Grace    | Finance    |
| Grace    | IT         |
| Grace    | HR         |
| Hannah   | Marketing  |
| Hannah   | Sales      |
| Hannah   | Finance    |
| Hannah   | IT         |
| Hannah   | HR         |
+----------+------------+
40 rows in set (0.00 sec)

mysql> SELECT COUNT(*) AS total_combinations FROM Employees e CROSS JOIN Departments d;
+--------------------+
| total_combinations |
+--------------------+
|                 40 |
+--------------------+
1 row in set (0.05 sec)
